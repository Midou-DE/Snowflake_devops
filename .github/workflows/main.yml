name: Deploy data pipeline

# Action will run on pushes to selected branches
on:
  push:
    branches:
      - dev
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout step is necessary if you want to use a config file from your repo
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Snowflake CLI using pipx with dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install pipx
          pipx install snowflake-cli-labs --include-deps  # Include dependencies
          snow --version  # Check if the installation was successful

      # Test Snowflake CLI connection (optional)
      - name: Test Snowflake CLI connection
        run: |
          source venv/bin/activate
          snow connection test \
            --account="${{ secrets.SNOWFLAKE_ACCOUNT }}" \
            --username="${{ secrets.SNOWFLAKE_USER }}" \
            --password="${{ secrets.SNOWFLAKE_PASSWORD }}" \
            --role="ACCOUNTADMIN" \
            --warehouse="QUICKSTART_WH" \

      # Update Snowflake's copy of the repository
      - name: Fetch repository changes
        run: |
            snow git fetch "${REPO_NAME}" \
            --role="ACCOUNTADMIN" \
            --warehouse="QUICKSTART_WH"

      # Deploy pipeline with branch specific parameters
      - name: Deploy data pipeline to ${{ github.ref_name }}
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          if [ "${BRANCH_NAME}" == "main" ]; then
            RETENTION_TIME=1
          elif [ "${BRANCH_NAME}" == "dev" ]; then
            RETENTION_TIME=0
          fi
          snow git execute \
            "@${REPO_NAME}/branches/${BRANCH_NAME}/deploy_pipeline.sql" \
            -D "environment='${BRANCH_NAME}'" \
            -D "retention_time=${RETENTION_TIME}"

      - name: Verify data pipeline to ${{ github.ref_name }}
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          if [ "${BRANCH_NAME}" == "main" ]; then
            RETENTION_TIME=1
          elif [ "${BRANCH_NAME}" == "dev" ]; then
            RETENTION_TIME=0
          fi

          snow git execute \
            "@${REPO_NAME}/branches/${BRANCH_NAME}/verify_pipeline.sql" \
            -D "environment='${BRANCH_NAME}'" \
            -D "retention_time=${RETENTION_TIME}"
